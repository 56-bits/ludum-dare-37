<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///instance creation
instance_create(x, y, obj_camera);
instance_create(x, y, obj_light_control);
instance_create(x, y, obj_crafting);
instance_create(x, y, obj_storage_control);
instance_create(x, y, obj_death);
instance_create(x, y, obj_win);
instance_create(x, y, obj_tut);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables

global.o2 = 500
global.co2 = 500

global.aq = ( sqr(global.o2-0.5)^2 + sqr(global.co2-0.5) ) * -2 + 1

global.pow = 200
global.pow_max = 200

global.wood = 200
global.wood_max = 200

global.water = 100
global.water_max = 100

global.food = 100
global.food_max = 100

global.metal = 100
global.metal_max = 100

global.progress = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set alarm

alarm[0] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gui stuff

ecy = 0;
pinned = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///particle creation

global.ps = part_system_create()
part_system_depth(global.ps, -5)

global.p1 = part_type_create();
part_type_shape(global.p1,pt_shape_square);
part_type_size(global.p1,0.05,0.12,0,0);
part_type_scale(global.p1,1,1);
part_type_color2(global.p1,c_dkgray, c_black);
part_type_alpha1(global.p1,1);
part_type_speed(global.p1,1,3,0.01,0);
part_type_direction(global.p1,250,290,0,3);
part_type_gravity(global.p1,0.50,270);
part_type_orientation(global.p1,0,359,1,1,1);
part_type_blend(global.p1,1);
part_type_life(global.p1,5,15);

global.pe = part_emitter_create(global.ps)
part_emitter_region(global.ps, global.pe, view_xview, view_xview + view_wview, view_yview, view_yview + view_hview, ps_shape_rectangle, ps_distr_linear)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sound

audio_group_load(ag_sfx)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(global.ps)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///trigger resourse update event

alarm[0] = room_speed

if !instance_exists(obj_tut)
{
    with obj_player
        event_perform( ev_other, ev_user0)
    
    with par_machines
        event_perform( ev_other, ev_user0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///resouce management

//calculation relevant values

air_quantity = global.o2 + global.co2

material_max = global.wood_max + global.metal_max
material_quantity = global.wood + global.metal
materialp = material_quantity/material_max

life_max = global.water_max + global.food_max
life_quantity = global.food + global.water
lifep = life_quantity/life_max

o2p = global.o2 / air_quantity
co2p = global.co2 / air_quantity
powp = global.pow / global.pow_max
woodp = global.wood / global.wood_max
foodp = global.food / global.food_max
waterp = global.water / global.water_max
metalp = global.metal / global.metal_max

global.aq = ( sqr(o2p-0.5) + sqr(co2p-0.5) ) * -2 + 1

if global.o2 &lt;= 0 global.o2 = 0
if global.co2 &lt;= 0 global.co2 = 0
global.pow = clamp(global.pow, 0, global.pow_max)
global.wood = clamp(global.wood, 0, global.wood_max)
global.food = clamp(global.food, 0, global.food_max)
global.water = clamp(global.water, 0, global.water_max)
global.metal = clamp(global.metal, 0, global.metal_max)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sound

if instance_exists(obj_player)
    audio_listener_position(obj_player.x, obj_player.y, 0)
    audio_listener_orientation(0, 0, -1, 0, 1, 0)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///particles
part_emitter_region(global.ps, global.pe, view_xview, view_xview + view_wview, view_yview, view_yview + view_hview, ps_shape_rectangle, ps_distr_linear)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///statistics
draw_set_colour(c_gray)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_font(fnt_stats);

var cx = 32;
var cy = 32;

var bl = 250;
var bh = 24

mx = window_mouse_get_x()
my = window_mouse_get_y()

var x_hov = mx &gt; cx &amp;&amp; mx &lt; cx + bl
var y_hov = my &gt; cy &amp;&amp; my &lt; ecy

var details = x_hov &amp;&amp; y_hov

if details &amp;&amp; mouse_check_button_pressed(mb_left)
{
    pinned = !pinned
}

if pinned
{
    details = true
}

//air
draw_healthbar(cx, cy, cx + bl, cy + bh, global.aq* 100, c_maroon, c_green, c_lime, 0, true, true)
draw_sprite(spr_air_quality, 0, cx + bl + 32, cy)
if details
{
    draw_text(cx + bl/2, cy + bh/2, "AQ: " + string(global.aq * 100) + "%")
    cx += 32
    cy += 32;
    draw_healthbar(cx, cy, cx + bl, cy + bh, o2p * 100, c_maroon, c_green, c_lime, 0, true, true)
    draw_sprite(spr_o2, 0, cx + bl + 32, cy)
    draw_text(cx + bl/2, cy + bh/2, "O2: " + string(o2p * 100) + "%" + " (" + string(global.o2) + ")")
    cy += 32;
    draw_healthbar(cx, cy, cx + bl, cy + bh, co2p * 100, c_maroon, c_green, c_lime, 0, true, true)
    draw_sprite(spr_co2, 0, cx + bl + 32, cy)
    draw_text(cx + bl/2, cy + bh/2, "CO2: " + string(co2p * 100) + "%" + " (" + string(global.co2) + ")")
    cx -= 32
}

cy += 32


//power
draw_healthbar(cx, cy, cx + bl, cy + bh, powp* 100, c_maroon, c_green, c_lime, 0, true, true)
draw_sprite(spr_power, 0, cx + bl + 32, cy)
if details draw_text(cx + bl/2, cy + bh/2, "Pow: " + string(powp * 100) + "%" + " (" + string(global.pow) + ")")

cy += 32;

//materials
draw_healthbar(cx, cy, cx + bl, cy + bh, materialp* 100, c_maroon, c_green, c_lime, 0, true, true)
draw_sprite(spr_materials, 0, cx + bl + 32, cy)
if details
{
    draw_text(cx + bl/2, cy + bh/2, "Materials: " + string(materialp * 100) + "%")
    cx += 32
    cy += 32
    draw_healthbar(cx, cy, cx + bl, cy + bh, woodp * 100, c_maroon, c_green, c_lime, 0, true, true)
    draw_sprite(spr_wood, 0, cx + bl + 32, cy)
    draw_text(cx + bl/2, cy + bh/2, "Wood: " + string(woodp * 100) + "%" + " (" + string(global.wood) + ")")
    cy += 32;
    draw_healthbar(cx, cy, cx + bl, cy + bh, metalp * 100, c_maroon, c_green, c_lime, 0, true, true)
    draw_sprite(spr_metal, 0, cx + bl + 32, cy)
    draw_text(cx + bl/2, cy + bh/2, "Metal: " + string(metalp * 100) + "%" + " (" + string(global.metal) + ")")
    cx -= 32
}

cy += 32;

//life supprt
draw_healthbar(cx, cy, cx + bl, cy + bh, lifep* 100, c_maroon, c_green, c_lime, 0, true, true)
draw_sprite(spr_life_support, 0, cx + bl + 32, cy)
if details
{
    draw_text(cx + bl/2, cy + bh/2, "Life Support: " + string(lifep* 100) + "%")
    cx += 32
    cy += 32
    draw_healthbar(cx, cy, cx + bl, cy + bh, waterp * 100, c_maroon, c_green, c_lime, 0, true, true)
    draw_sprite(spr_water, 0, cx + bl + 32, cy)
    draw_text(cx + bl/2, cy + bh/2, "Water: " + string(waterp * 100) + "%" + " (" + string(global.water) + ")")
    cy += 32;
    draw_healthbar(cx, cy, cx + bl, cy + bh, foodp * 100, c_maroon, c_green, c_lime, 0, true, true)
    draw_sprite(spr_food, 0, cx + bl + 32, cy)
    draw_text(cx + bl/2, cy + bh/2, "Food: " + string(foodp * 100) + "%" + " (" + string(global.food) + ")")
    cx -= 32
}

ecy = cy

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///escape

xbor = window_get_width()
ybor = window_get_height()

if global.progress &gt; 0
{
    draw_healthbar(xbor - 128, 64, xbor - 64, ybor - 256, global.progress, c_dkgray, c_blue, c_blue, 2, true, true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_tut)
    instance_create(x, y, obj_tut)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
